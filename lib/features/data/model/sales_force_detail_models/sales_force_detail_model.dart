import 'dart:convert';
import 'package:mytradeasia/features/domain/entities/sales_force_detail_entities/sales_force_detail_entity.dart';

class SalesforceDetailModel extends SalesforceDetailEntity {
  const SalesforceDetailModel({
    _AttributesModel? attributes,
    String? id,
    bool? isDeleted,
    //  dynamic masterRecordId,
    String? name,
    String? type,
    String? recordTypeId,
    String? billingStreet,
    String? billingCity,
    //  dynamic billingState,
    //  dynamic billingPostalCode,
    String? billingCountry,
    //  dynamic billingLatitude,
    //  dynamic billingLongitude,
    //  dynamic billingGeocodeAccuracy,
    //  BillingAddress billingAddress,
    //  dynamic shippingStreet,
    //  dynamic shippingCity,
    //  dynamic shippingState,
    //  dynamic shippingPostalCode,
    //  dynamic shippingCountry,
    //  dynamic shippingLatitude,
    //  dynamic shippingLongitude,
    //  dynamic shippingGeocodeAccuracy,
    //  dynamic shippingAddress,
    //  dynamic phone,
    //  dynamic fax,
    //  dynamic website,
    String? photoUrl,
    //  dynamic industry,
    //  dynamic annualRevenue,
    //  dynamic numberOfEmployees,
    //  dynamic description,
    String? currencyIsoCode,
    String? ownerId,
    String? createdDate,
    String? createdById,
    String? lastModifiedDate,
    String? lastModifiedById,
    String? systemModstamp,
    //  dynamic lastActivityDate,
    dynamic lastViewedDate,
    dynamic lastReferencedDate,
    //  dynamic jigsaw,
    //  dynamic jigsawCompanyId,
    //  dynamic accountSource,
    //  dynamic sicDesc,
    //  bool activeC,
    //  dynamic natureOfBusinessC,
    //  dynamic bankNameC,
    //  dynamic aCNoC,
    //  dynamic swiftCodeC,
    //  dynamic nameOfAccountC,
    //  dynamic bankLocationC,
    //  String accountCompanyNameC,
    //  dynamic typeOfLogisticC,
    //  int totalNoOffOpportunitiesC,
    //  dynamic specificationOfProductsC,
    //  bool imageOfPackedProductsC,
    //  bool msdsC,
    //  dynamic estimatedDeliveryC,
    //  dynamic quotationC,
    //  dynamic packagingDetailsC,
    //  dynamic paymentTermsC,
    //  dynamic anySpecificationFromCustomerC,
    //  dynamic applicationTheProductWillBeUsedForC,
    //  dynamic portOfDischargeC,
    //  dynamic incotermsDeliveryTermsC,
    //  dynamic anySpecificGradesC,
    //  bool tdsC,
    //  dynamic quantityRequiredC,
    //  dynamic portOfLoadingC,
    //  dynamic ibanNoC,
    //  dynamic companyRegistrationC,
    //  dynamic bankStreetC,
    //  dynamic bankCityC,
    //  dynamic bankStateC,
    //  dynamic bankCountryC,
    //  dynamic bankPostalCodeC,
    //  dynamic regionC,
    //  dynamic trackingLinkC,
    //  String workedByC,
    //  dynamic parentCompanyC,
    //  dynamic bankAddressC,
    //  dynamic bankCurrencyC,
    //  dynamic bankPhoneC,
    //  dynamic bankFaxC,
    String? businessEntityC,
    //  dynamic uomC,
    String? insuranceCompanyNameC,
    //  dynamic productNameC,
    //  dynamic ainNoC,
    //  dynamic binNoC,
    //  dynamic cellPhoneC,
    //  String breadWinnerBwAccountStatusC,
    //  dynamic breadWinnerTotalAmountCreditC,
    //  dynamic breadWinnerTotalAmountDueC,
    //  dynamic breadWinnerTotalAmountInvoicedC,
    //  dynamic breadWinnerTotalAmountOverdueC,
    //  dynamic breadWinnerTotalAmountPaidC,
    //  int breadWinnerTotalDraftAmountC,
    //  dynamic breadWinnerTotalUnallocatedCreditC,
    //  int creditLimitC,
    //  dynamic totalCostPriceQuantityC,
    //  dynamic totalCostPriceC,
    //  dynamic totalOpportunityAmountC,
    //  dynamic totalOpportunityQuantityC,
    //  int totalAmountOfAllOpportunitiesC,
    //  dynamic taxIdentificationNumberVatC,
    //  dynamic salesTaxIdentificationNumberCstC,
    //  dynamic gstRegNoC,
    //  dynamic netSalesValueNsvC,
    //  dynamic importExportCodeIecC,
    //  dynamic stateNameAndCodeC,
    //  dynamic authorisedDealerCodeAdcC,
    //  dynamic chaNumberC,
    //  dynamic otherChaChargesC,
    //  dynamic clearanceChargeC,
    //  dynamic relatedToC,
    //  int totalQuantityC,
    //  dynamic emailC,
    //  dynamic rh2TestCurrencyC,
    //  bool sendEmailReminderC,
    //  dynamic workedBy2C,
  }) : super(
          attributes: attributes,
          billingCity: billingCity,
          billingCountry: billingCountry,
          billingStreet: billingStreet,
          businessEntityC: businessEntityC,
          createdById: createdById,
          createdDate: createdDate,
          currencyIsoCode: currencyIsoCode,
          id: id,
          insuranceCompanyNameC: insuranceCompanyNameC,
          isDeleted: isDeleted,
          lastModifiedById: lastModifiedById,
          lastModifiedDate: lastModifiedDate,
          lastReferencedDate: lastReferencedDate,
          lastViewedDate: lastViewedDate,
          name: name,
          ownerId: ownerId,
          photoUrl: photoUrl,
          recordTypeId: recordTypeId,
          systemModstamp: systemModstamp,
          type: type,
        );

  factory SalesforceDetailModel.fromRawJson(String str) =>
      SalesforceDetailModel.fromJson(json.decode(str));

  factory SalesforceDetailModel.fromJson(Map<String, dynamic> json) =>
      SalesforceDetailModel(
        attributes: _AttributesModel.fromJson(json["attributes"]),
        id: json["Id"],
        isDeleted: json["IsDeleted"],
        // masterRecordId: json["MasterRecordId"],
        name: json["Name"],
        type: json["Type"],
        recordTypeId: json["RecordTypeId"],
        billingStreet: json["BillingStreet"],
        billingCity: json["BillingCity"],
        // billingState: json["BillingState"],
        // billingPostalCode: json["BillingPostalCode"],
        billingCountry: json["BillingCountry"],
        // billingLatitude: json["BillingLatitude"],
        // billingLongitude: json["BillingLongitude"],
        // billingGeocodeAccuracy: json["BillingGeocodeAccuracy"],
        // billingAddress: BillingAddress.fromJson(json["BillingAddress"]),
        // shippingStreet: json["ShippingStreet"],
        // shippingCity: json["ShippingCity"],
        // shippingState: json["ShippingState"],
        // shippingPostalCode: json["ShippingPostalCode"],
        // shippingCountry: json["ShippingCountry"],
        // shippingLatitude: json["ShippingLatitude"],
        // shippingLongitude: json["ShippingLongitude"],
        // shippingGeocodeAccuracy: json["ShippingGeocodeAccuracy"],
        // shippingAddress: json["ShippingAddress"],
        // phone: json["Phone"],
        // fax: json["Fax"],
        // website: json["Website"],
        photoUrl: json["PhotoUrl"],
        // industry: json["Industry"],
        // annualRevenue: json["AnnualRevenue"],
        // numberOfEmployees: json["NumberOfEmployees"],
        // description: json["Description"],
        currencyIsoCode: json["CurrencyIsoCode"],
        ownerId: json["OwnerId"],
        createdDate: json["CreatedDate"],
        createdById: json["CreatedById"],
        lastModifiedDate: json["LastModifiedDate"],
        lastModifiedById: json["LastModifiedById"],
        systemModstamp: json["SystemModstamp"],
        // lastActivityDate: json["LastActivityDate"],
        lastViewedDate: json["LastViewedDate"],
        lastReferencedDate: json["LastReferencedDate"],
        // jigsaw: json["Jigsaw"],
        // jigsawCompanyId: json["JigsawCompanyId"],
        // accountSource: json["AccountSource"],
        // sicDesc: json["SicDesc"],
        // activeC: json["Active__c"],
        // natureOfBusinessC: json["Nature_of_Business__c"],
        // bankNameC: json["Bank_Name__c"],
        // aCNoC: json["A_C_No__c"],
        // swiftCodeC: json["Swift_Code__c"],
        // nameOfAccountC: json["Name_of_Account__c"],
        // bankLocationC: json["Bank_Location__c"],
        // accountCompanyNameC: json["Account_Company_Name__c"],
        // typeOfLogisticC: json["Type_of_Logistic__c"],
        // totalNoOffOpportunitiesC: json["Total_No_Off_Opportunities__c"],
        // specificationOfProductsC: json["Specification_of_Products__c"],
        // imageOfPackedProductsC: json["Image_of_Packed_Products__c"],
        // msdsC: json["MSDS__c"],
        // estimatedDeliveryC: json["Estimated_Delivery__c"],
        // quotationC: json["Quotation__c"],
        // packagingDetailsC: json["Packaging_Details__c"],
        // paymentTermsC: json["Payment_Terms__c"],
        // anySpecificationFromCustomerC: json["Any_Specification_from_Customer__c"],
        // applicationTheProductWillBeUsedForC: json["Application_the_product_will_be_used_for__c"],
        // portOfDischargeC: json["Port_of_Discharge__c"],
        // incotermsDeliveryTermsC: json["Incoterms_Delivery_Terms__c"],
        // anySpecificGradesC: json["Any_specific_grades__c"],
        // tdsC: json["TDS__c"],
        // quantityRequiredC: json["Quantity_Required__c"],
        // portOfLoadingC: json["Port_of_Loading__c"],
        // ibanNoC: json["IBAN_No__c"],
        // companyRegistrationC: json["Company_Registration__c"],
        // bankStreetC: json["Bank_Street__c"],
        // bankCityC: json["Bank_City__c"],
        // bankStateC: json["Bank_State__c"],
        // bankCountryC: json["Bank_Country__c"],
        // bankPostalCodeC: json["Bank_Postal_Code__c"],
        // regionC: json["Region__c"],
        // trackingLinkC: json["Tracking_Link__c"],
        // workedByC: json["Worked_By__c"],
        // parentCompanyC: json["PARENT_COMPANY__c"],
        // bankAddressC: json["Bank_Address__c"],
        // bankCurrencyC: json["Bank_Currency__c"],
        // bankPhoneC: json["Bank_Phone__c"],
        // bankFaxC: json["Bank_Fax__c"],
        businessEntityC: json["Business_Entity__c"],
        // uomC: json["UOM__c"],
        insuranceCompanyNameC: json["Insurance_Company_Name__c"],
        // productNameC: json["Product_Name__c"],
        // ainNoC: json["AIN_NO__c"],
        // binNoC: json["BIN_NO__c"],
        // cellPhoneC: json["Cell_Phone__c"],
        // breadWinnerBwAccountStatusC: json["Bread_Winner__BW_Account_Status__c"],
        // breadWinnerTotalAmountCreditC: json["Bread_Winner__Total_Amount_Credit__c"],
        // breadWinnerTotalAmountDueC: json["Bread_Winner__Total_Amount_Due__c"],
        // breadWinnerTotalAmountInvoicedC: json["Bread_Winner__Total_Amount_Invoiced__c"],
        // breadWinnerTotalAmountOverdueC: json["Bread_Winner__Total_Amount_Overdue__c"],
        // breadWinnerTotalAmountPaidC: json["Bread_Winner__Total_Amount_Paid__c"],
        // breadWinnerTotalDraftAmountC: json["Bread_Winner__Total_Draft_Amount__c"],
        // breadWinnerTotalUnallocatedCreditC: json["Bread_Winner__Total_Unallocated_Credit__c"],
        // creditLimitC: json["Credit_Limit__c"],
        // totalCostPriceQuantityC: json["Total_Cost_Price_Quantity__c"],
        // totalCostPriceC: json["Total_Cost_Price__c"],
        // totalOpportunityAmountC: json["Total_Opportunity_Amount__c"],
        // totalOpportunityQuantityC: json["Total_Opportunity_Quantity__c"],
        // totalAmountOfAllOpportunitiesC: json["Total_Amount_of_all_Opportunities__c"],
        // taxIdentificationNumberVatC: json["TAX_IDENTIFICATION_NUMBER_VAT__c"],
        // salesTaxIdentificationNumberCstC: json["SALES_TAX_IDENTIFICATION_NUMBER_CST__c"],
        // gstRegNoC: json["GST_Reg_No__c"],
        // netSalesValueNsvC: json["Net_Sales_Value_NSV__c"],
        // importExportCodeIecC: json["IMPORT_EXPORT_CODE_IEC__c"],
        // stateNameAndCodeC: json["State_Name_and_Code__c"],
        // authorisedDealerCodeAdcC: json["Authorised_Dealer_Code_ADC__c"],
        // chaNumberC: json["CHA_Number__c"],
        // otherChaChargesC: json["Other_CHA_Charges__c"],
        // clearanceChargeC: json["Clearance_Charge__c"],
        // relatedToC: json["Related_To__c"],
        // totalQuantityC: json["Total_Quantity__c"],
        // emailC: json["Email__c"],
        // rh2TestCurrencyC: json["rh2__testCurrency__c"],
        // sendEmailReminderC: json["Send_Email_Reminder__c"],
        // workedBy2C: json["Worked_By_2__c"],
      );
}

class _AttributesModel extends Attributes {
  const _AttributesModel({
    String? type,
    String? url,
  }) : super(type: type, url: url);

  factory _AttributesModel.fromRawJson(String str) =>
      _AttributesModel.fromJson(json.decode(str));

  factory _AttributesModel.fromJson(Map<String, dynamic> json) =>
      _AttributesModel(
        type: json["type"],
        url: json["url"],
      );
}

class _BillingAddressModel extends BillingAddress {
  const _BillingAddressModel({
    String? city,
    String? country,
    dynamic geocodeAccuracy,
    dynamic latitude,
    dynamic longitude,
    dynamic postalCode,
    dynamic state,
    String? street,
  }) : super(
          city: city,
          country: country,
          geocodeAccuracy: geocodeAccuracy,
          latitude: latitude,
          longitude: longitude,
          postalCode: postalCode,
          state: state,
          street: street,
        );

  factory _BillingAddressModel.fromRawJson(String str) =>
      _BillingAddressModel.fromJson(json.decode(str));

  factory _BillingAddressModel.fromJson(Map<String, dynamic> json) =>
      _BillingAddressModel(
        city: json["city"],
        country: json["country"],
        geocodeAccuracy: json["geocodeAccuracy"],
        latitude: json["latitude"],
        longitude: json["longitude"],
        postalCode: json["postalCode"],
        state: json["state"],
        street: json["street"],
      );
}
